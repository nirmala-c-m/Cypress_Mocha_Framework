{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-07-15T07:03:26.333Z",
    "end": "2024-07-15T07:03:26.792Z",
    "duration": 459,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "41d0af24-65c3-428f-9c4b-1d94a6181254",
      "title": "",
      "fullFile": "cypress/e2e/bookfilght.cy.js",
      "file": "cypress/e2e/bookfilght.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9cc9d753-b9ff-4e3f-842a-b0567404b5d4",
          "title": "Book Flight",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully Login a new user and Book a Flight",
              "fullTitle": "Book Flight should successfully Login a new user and Book a Flight",
              "timedOut": null,
              "duration": 370,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('@loginData').then(loginData => {\n  const rows = parse(loginData, {\n    header: true\n  }).data; // Parsing CSV data into rows \n  const loginRow = rows[0]; // Access the first row directly\n  cy.login(loginRow.username, loginRow.password); // Login method defined in command.js\n  cy.url().should('include', 'https://demo.guru99.com/test/newtours/login_sucess.php');\n  cy.title().should('eq', 'Login: Mercury Tours');\n  _BookFlightPage.default.navigateToReservation();\n  // Inside this loop, you can proceed to book flights\n  cy.get('@flightData').then(flightData => {\n    const flightRows = parse(flightData, {\n      header: true\n    }).data; // Parsing CSV data into rows \n    const flightRow = flightRows[0]; // Access the first row directly\n    _BookFlightPage.default.selectFlightDetails(flightRow);\n    // Add assertions for booking details if needed\n  });\n});",
              "err": {
                "message": "ReferenceError: parse is not defined",
                "estack": "ReferenceError: parse is not defined\n    at Context.eval (webpack://cypressapiautomation/./cypress/e2e/bookfilght.cy.js:13:19)",
                "diff": null
              },
              "uuid": "8a4ce985-ad1f-48c2-8eb5-99367679f66a",
              "parentUUID": "9cc9d753-b9ff-4e3f-842a-b0567404b5d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8a4ce985-ad1f-48c2-8eb5-99367679f66a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 370,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}